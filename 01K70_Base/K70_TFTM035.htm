<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\K70_TFTM035.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\K70_TFTM035.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Fri Feb 23 20:36:04 2018
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CalibrateTouch &rArr; GetTouch &rArr; GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[43]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[43]">ADC0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[44]">ADC1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[70]">ADC2_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[71]">ADC3_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[28]">CAN0_Bus_Off_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[29]">CAN0_Error_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[27]">CAN0_ORed_Message_buffer_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2b]">CAN0_Rx_Warning_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2a]">CAN0_Tx_Warning_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2c]">CAN0_Wake_Up_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[30]">CAN1_Bus_Off_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[31]">CAN1_Error_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2f]">CAN1_ORed_Message_buffer_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[33]">CAN1_Rx_Warning_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[32]">CAN1_Tx_Warning_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[34]">CAN1_Wake_Up_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[45]">CMP0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[46]">CMP1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[47]">CMP2_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6c]">CMP3_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4b]">CMT_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5b]">DAC0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5c]">DAC1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[67]">DDR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[a]">DMA0_DMA16_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[14]">DMA10_DMA26_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[15]">DMA11_DMA27_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[16]">DMA12_DMA28_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[17]">DMA13_DMA29_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[18]">DMA14_DMA30_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[19]">DMA15_DMA31_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[b]">DMA1_DMA17_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[c]">DMA2_DMA18_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[d]">DMA3_DMA19_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[e]">DMA4_DMA20_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[f]">DMA5_DMA21_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[10]">DMA6_DMA22_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[11]">DMA7_DMA23_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[12]">DMA8_DMA24_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[13]">DMA9_DMA25_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1a]">DMA_Error_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[74]">DefaultISR</a> from startup_mk70f12.o(.text) referenced 134 times from startup_mk70f12.o(RESET)
 <LI><a href="#[55]">ENET_1588_Timer_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[58]">ENET_Error_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[57]">ENET_Receive_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[56]">ENET_Transmit_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1c]">FTFE_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[48]">FTM0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[49]">FTM1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4a]">FTM2_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6f]">FTM3_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[22]">I2C0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[23]">I2C1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2e]">I2S0_Rx_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[2d]">I2S0_Tx_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[73]">I2S1_Rx_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[72]">I2S1_Tx_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[78]">LCDFreeHandler</a> from lcdlatchinghandler.o(i.LCDFreeHandler) referenced from lcdlatchinghandler.o(i.LCDLatchingHandler_Init)
 <LI><a href="#[6b]">LCD_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1f]">LLW_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5f]">LPTimer_IRQHandler</a> from lptimer_ldd.o(i.LPTimer_IRQHandler) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1e]">LVD_LVW_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5e]">MCG_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1b]">MCM_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[69]">NFC_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[52]">PDB0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4e]">PIT0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4f]">PIT1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[50]">PIT2_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[51]">PIT3_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[61]">PORTA_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[62]">PORTB_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[63]">PORTC_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[64]">PORTD_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[65]">PORTE_IRQHandler</a> from touchpanel.o(i.PORTE_IRQHandler) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[66]">PORTF_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[21]">RNG_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4c]">RTC_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[4d]">RTC_Seconds_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[1d]">Read_Collision_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[60]">Reserved102_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6d]">Reserved115_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6e]">Reserved116_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[35]">Reserved59_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[59]">Reserved95_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5a]">SDHC_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[24]">SPI0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[25]">SPI1_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[26]">SPI2_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[68]">SWI_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[76]">SystemInit</a> from system_mk70f12.o(i.SystemInit) referenced from startup_mk70f12.o(.text)
 <LI><a href="#[5d]">TSI0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[79]">TouchHandler</a> from main_file.o(i.TouchHandler) referenced from main_file.o(i.main)
 <LI><a href="#[38]">UART0_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[36]">UART0_LON_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[37]">UART0_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3a]">UART1_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[39]">UART1_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3c]">UART2_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3b]">UART2_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3e]">UART3_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3d]">UART3_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[40]">UART4_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[3f]">UART4_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[42]">UART5_ERR_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[41]">UART5_RX_TX_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[53]">USB0_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[54]">USBDCD_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[6a]">USBHS_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[20]">Watchdog_IRQHandler</a> from startup_mk70f12.o(.text) referenced from startup_mk70f12.o(RESET)
 <LI><a href="#[77]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mk70f12.o(.text)
 <LI><a href="#[75]">main</a> from main_file.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN0_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN0_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN0_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>CAN0_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CAN1_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DDR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DMA0_DMA16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA10_DMA26_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA11_DMA27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA12_DMA28_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA13_DMA29_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA14_DMA30_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA15_DMA31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA1_DMA17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA2_DMA18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA3_DMA19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA4_DMA20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA5_DMA21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA6_DMA22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA7_DMA23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA8_DMA24_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA9_DMA25_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>ENET_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>ENET_Receive_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>ENET_Transmit_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>FTFE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>FTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2S0_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2S0_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>I2S1_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>I2S1_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>NFC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>PIT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>PIT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>PIT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>PIT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>PORTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>PORTF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>Reserved102_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>Reserved115_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Reserved116_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>Reserved59_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>Reserved95_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SDHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART0_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>UART0_LON_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART0_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART1_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART2_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART3_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART4_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART5_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART5_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USBDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk70f12.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ba]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>AssignTouchInterruptHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchpanel.o(i.AssignTouchInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>CalibrateTouch</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, touchpanel.o(i.CalibrateTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CalibrateTouch &rArr; GetTouch &rArr; GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectToTouchPanel
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouch
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFilledSquare
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>ClearScreen</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ili9488_display.o(i.ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ClearScreen &rArr; Write_Data_U16 &rArr; Write_Data &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_U16
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[87]"></a>ConfigureSPIForTouch</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, touchpanel.o(i.ConfigureSPIForTouch))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectToTouchPanel
</UL>

<P><STRONG><a name="[7f]"></a>ConnectToTouchPanel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, multifunctionbus.o(i.ConnectToTouchPanel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConnectToTouchPanel
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureSPIForTouch
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Poll
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[8d]"></a>ConvertIntToText</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, converters.o(i.ConvertIntToText))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocation
</UL>

<P><STRONG><a name="[a8]"></a>Delay_Cycles</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, delays.o(i.Delay_Cycles))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetRegVal
</UL>

<P><STRONG><a name="[83]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delays.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_ExitSleep
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_EnterSleep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_SendInitSequence
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[88]"></a>DisableTouchInterrupt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, touchpanel.o(i.DisableTouchInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DisableTouchInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTE_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>EnableTouchInterrupt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, touchpanel.o(i.EnableTouchInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EnableTouchInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Poll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>FontChip_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fontchip.o(i.FontChip_Init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>GetTouch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touchpanel.o(i.GetTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetTouch &rArr; GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectToTouchPanel
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocation
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableTouchInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[8b]"></a>GetTouchLocation</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, touchpanel.o(i.GetTouchLocation))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertIntToText
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Method5
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Poll
</UL>

<P><STRONG><a name="[95]"></a>ILI9488_EnterSleep</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ili9488_display.o(i.ILI9488_EnterSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ILI9488_EnterSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFreeHandler
</UL>

<P><STRONG><a name="[97]"></a>ILI9488_ExitSleep</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ili9488_display.o(i.ILI9488_ExitSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ILI9488_ExitSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_SendInitSequence
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_BeforeDisplay
</UL>

<P><STRONG><a name="[98]"></a>ILI9488_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ili9488_display.o(i.ILI9488_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ILI9488_Init &rArr; ILI9488_SendInitSequence &rArr; ILI9488_ExitSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_SendInitSequence
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_InitPeripherals
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>LCDLactchingHandler_AfterDisplay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcdlatchinghandler.o(i.LCDLactchingHandler_AfterDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>LCDLatchingHandler_BeforeDisplay</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lcdlatchinghandler.o(i.LCDLatchingHandler_BeforeDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCDLatchingHandler_BeforeDisplay &rArr; ILI9488_ExitSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_ExitSleep
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>LCDLatchingHandler_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcdlatchinghandler.o(i.LCDLatchingHandler_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCDLatchingHandler_Init &rArr; LPTimer_DefaultInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimer_SetForInterrupt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimer_SetCallBack
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimer_DefaultInit
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>LCD_SetPos</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ili9488_display.o(i.LCD_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetPos &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd_Data
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSingleChar
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFilledSquare
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[9e]"></a>LPTimer_DefaultInit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lptimer_ldd.o(i.LPTimer_DefaultInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPTimer_DefaultInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_Init
</UL>

<P><STRONG><a name="[5f]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lptimer_ldd.o(i.LPTimer_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTimer_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>LPTimer_SetCallBack</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lptimer_ldd.o(i.LPTimer_SetCallBack))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_Init
</UL>

<P><STRONG><a name="[a0]"></a>LPTimer_SetForInterrupt</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lptimer_ldd.o(i.LPTimer_SetForInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTimer_SetForInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_Init
</UL>

<P><STRONG><a name="[84]"></a>MakeCalibrationParams</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, touchpanelcalibration.o(i.MakeCalibrationParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MakeCalibrationParams &rArr; _makeFn
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeFn
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeEn
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeDn
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeCn
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeBn
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_makeAn
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[8c]"></a>Method5</STRONG> (Thumb, 404 bytes, Stack size 32 bytes, touchpanel.o(i.Method5))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXYAtZValid
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocation
</UL>

<P><STRONG><a name="[ae]"></a>MultiFunctionBus_Init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, multifunctionbus.o(i.MultiFunctionBus_Init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>PORTE_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchpanel.o(i.PORTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORTE_IRQHandler &rArr; DisableTouchInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableTouchInterrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>SDCard_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sdcard.o(i.SDCard_Init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>SPI_GetRegVal</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, spi_hld.o(i.SPI_GetRegVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Cycles
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchRegisterVal
</UL>

<P><STRONG><a name="[81]"></a>ShowFilledSquare</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ili9488_display.o(i.ShowFilledSquare))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ShowFilledSquare &rArr; LCD_SetPos &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>

<P><STRONG><a name="[aa]"></a>ShowSingleChar</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, ili9488_display.o(i.ShowSingleChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ShowSingleChar &rArr; LCD_SetPos &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowString
</UL>

<P><STRONG><a name="[8e]"></a>ShowString</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, ili9488_display.o(i.ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ShowString &rArr; ShowSingleChar &rArr; LCD_SetPos &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSingleChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocation
</UL>

<P><STRONG><a name="[76]"></a>SystemInit</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, system_mk70f12.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk70f12.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>TFTFlash_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tft_flash.o(i.TFTFlash_Init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>TouchHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main_file.o(i.TouchHandler))
<BR>[Address Reference Count : 1]<UL><LI> main_file.o(i.main)
</UL>
<P><STRONG><a name="[ab]"></a>TouchPanelCalibration_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchpanelcalibration.o(i.TouchPanelCalibration_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TouchPanelCalibration_Init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Init
</UL>

<P><STRONG><a name="[ac]"></a>TouchPanel_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, touchpanel.o(i.TouchPanel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchPanel_Init &rArr; TouchPanelCalibration_Init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanelCalibration_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>TouchPanel_Poll</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchpanel.o(i.TouchPanel_Poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TouchPanel_Poll &rArr; GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectToTouchPanel
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocation
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableTouchInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[be]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bf]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[a1]"></a>_makeAn</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeAn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeAn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[a2]"></a>_makeBn</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeBn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeBn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[a3]"></a>_makeCn</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeCn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeCn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[a4]"></a>_makeDn</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeDn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeDn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[a5]"></a>_makeEn</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeEn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeEn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[a6]"></a>_makeFn</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, touchpanelcalibration.o(i._makeFn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _makeFn
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCalibrationParams
</UL>

<P><STRONG><a name="[75]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, main_file.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; CalibrateTouch &rArr; GetTouch &rArr; GetTouchLocation &rArr; Method5 &rArr; GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Poll
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTFlash_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDCard_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiFunctionBus_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLatchingHandler_BeforeDisplay
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDLactchingHandler_AfterDisplay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontChip_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableTouchInterrupt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssignTouchInterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7e]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanelCalibration_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouch
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a7]"></a>ReceiveData</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, spi_hld.o(i.ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetRegVal
</UL>

<P><STRONG><a name="[99]"></a>ILI9488_InitPeripherals</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, ili9488_display.o(i.ILI9488_InitPeripherals))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_Init
</UL>

<P><STRONG><a name="[9a]"></a>ILI9488_SendInitSequence</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, ili9488_display.o(i.ILI9488_SendInitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ILI9488_SendInitSequence &rArr; ILI9488_ExitSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_ExitSleep
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd_Data
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_Init
</UL>

<P><STRONG><a name="[96]"></a>Write_Cmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ili9488_display.o(i.Write_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_ExitSleep
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_EnterSleep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_SendInitSequence
</UL>

<P><STRONG><a name="[9b]"></a>Write_Cmd_Data</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, ili9488_display.o(i.Write_Cmd_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Write_Cmd_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_SendInitSequence
</UL>

<P><STRONG><a name="[a9]"></a>Write_Data</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ili9488_display.o(i.Write_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Write_Data &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSingleChar
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFilledSquare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_U16
</UL>

<P><STRONG><a name="[86]"></a>Write_Data_U16</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ili9488_display.o(i.Write_Data_U16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Write_Data_U16 &rArr; Write_Data &rArr; Write_Cmd_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[8f]"></a>GetTouchLocationX</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchpanel.o(i.GetTouchLocationX))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetTouchLocationX &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchRegisterVal
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXYAtZValid
</UL>

<P><STRONG><a name="[91]"></a>GetTouchLocationZ1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchpanel.o(i.GetTouchLocationZ1))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetTouchLocationZ1 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchRegisterVal
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXYAtZValid
</UL>

<P><STRONG><a name="[92]"></a>GetTouchLocationZ2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchpanel.o(i.GetTouchLocationZ2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchRegisterVal
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXYAtZValid
</UL>

<P><STRONG><a name="[90]"></a>GetTouchRegisterVal</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, touchpanel.o(i.GetTouchRegisterVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetRegVal
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXYAtZValid
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationZ2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationZ1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationX
</UL>

<P><STRONG><a name="[94]"></a>GetXYAtZValid</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, touchpanel.o(i.GetXYAtZValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetXYAtZValid &rArr; GetTouchLocationZ2 &rArr; GetTouchRegisterVal &rArr; SPI_GetRegVal
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchRegisterVal
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationZ2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationZ1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchLocationX
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Method5
</UL>

<P><STRONG><a name="[89]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, touchpanel.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableTouchInterrupt
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableTouchInterrupt
</UL>

<P><STRONG><a name="[78]"></a>LCDFreeHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcdlatchinghandler.o(i.LCDFreeHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCDFreeHandler &rArr; ILI9488_EnterSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9488_EnterSleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdlatchinghandler.o(i.LCDLatchingHandler_Init)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
